apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  labels:
    app: redis
  name: redis
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: redis
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - env:
          - name: REDISCLI_AUTH
            valueFrom:
              secretKeyRef:
                name: "redis-auth"
                key: redis-auth
        image: redis:latest
        imagePullPolicy: Always
        name: redis
        command:
          - sh
          - -c
          - redis-server /conf/redis.conf --requirepass $REDISCLI_AUTH
        resources:
          limits:
            memory: "1Gi"
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379
          protocol: TCP
        readinessProbe:
          exec:
            command:
              - /bin/sh
              - -i
              - -c
              - redis-cli ping
          initialDelaySeconds: 5
          timeoutSeconds: 15
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /data
          name: redis-data
        - mountPath: /conf
          name: redis-conf
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: redis-conf
        configMap:
          name: redis
          items:
            - key: redis-cnf
              path: redis.conf
              mode: 0440
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis
